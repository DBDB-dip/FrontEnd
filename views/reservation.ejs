<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reservation</title>
    <link rel="stylesheet" href="stylesheets/reservation.css">
    <style>
  
    </style>
</head>
<body>
    <header>
        <nav>
            <ul>
                <li><a href="/ExpertFilter">예약하기</a></li>
                <li><a href="/reserveInfo">예약정보</a></li>
                <li><a href="/mypage">회원정보</a></li>
            </ul>
        </nav>
    </header>
    <p>"요일과 시간을 선택해주세요."</p>
    <form >
        
        <label for="day">요일</label>
        <div id="daySelection">
            <!-- 라디오 버튼 동적 생성 -->
        </div>
       

        <p>&nbsp;</p><!-- 간격 추가 -->

        <label for="time">시간(1시간 단위)</label>
        <div id="timeSelection">
            <!-- 라디오 버튼 동적 생성 -->
        </div>
       

        <p>&nbsp;</p><!-- 간격 추가 -->

        <input type="submit" value="예약하기">
    </form>

    <script>
        const userId = getCookie('userId');
        const selectedExpertId = getCookie('selectedExpertId');

        // 쿠키에서 값을 가져오는 함수
        function getCookie(name) {
            const cookies = document.cookie.split('; ');
            for (let i = 0; i < cookies.length; i++) {
                const cookie = cookies[i].split('=');
                if (cookie[0] === name) {
                    return cookie[1];
                }
            }
            return null;
        }
        
        const expertsUrl = `http://localhost:8080/experts/${selectedExpertId}`;
        

        //전문가의 요일과 시간 출력하기.
        fetch(expertsUrl)
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok.');
            }
            return response.json(); // JSON 형태로 응답 데이터 가져오기
        })
        .then(data => {
            const responseData = data;

            const daySelectionDiv = document.getElementById('daySelection');
            const timeSelectionDiv = document.getElementById('timeSelection');

            function createTimeRange(start, end) {
                const timeRange = [];
                for (let i = start; i <= end; i++) {
                    timeRange.push(`${i}:00 - ${i + 1}:00`);
                }

                return timeRange;
            }

            function convertDayToInteger(day) {
                switch (day) {
                    case '월요일':
                        return 1;
                    case '화요일':
                        return 2;
                    case '수요일':
                        return 3;
                    case '목요일':
                        return 4;
                    case '금요일':
                        return 5;
                    case '토요일':
                        return 6;
                    case '일요일':
                        return 7;
                    default:
                        return null;
                }
            }

            responseData.forEach(data => {
                //요일 동적 생성
                const dayRadioButton = document.createElement('input');
                dayRadioButton.type = 'radio';
                dayRadioButton.name = 'day';
                dayRadioButton.value = convertDayToInteger(data.workday);
                const label = document.createElement('label');
                label.textContent = data.workday;

                daySelectionDiv.appendChild(dayRadioButton);
                daySelectionDiv.appendChild(label);
                daySelectionDiv.appendChild(document.createElement('br'));


                //시간 동적 생성
                const timeRange = createTimeRange(data.startTime, data.endTime);
                timeRange.forEach(time => {
                    const timeRadioButton = document.createElement('input');
                    timeRadioButton.type = 'radio';
                    timeRadioButton.name = 'time';
                    timeRadioButton.value = time;
                    const timeLabel = document.createElement('label');
                    timeLabel.textContent = time;

                    timeSelectionDiv.appendChild(timeRadioButton);
                    timeSelectionDiv.appendChild(timeLabel);
                    timeSelectionDiv.appendChild(document.createElement('br'));
                });
            });
            

            //선택 후 제출하면 디비에서 예약 진행.
            document.querySelector('form').addEventListener('submit', function(event) {
                event.preventDefault();

                const selectedDay = document.querySelector('input[name="day"]:checked').value;
                const selectedTime = document.querySelector('input[name="time"]:checked').value;

                const reservationUrl = `http://localhost:8080/reservation/day?userId=${userId}&expertId=${selectedExpertId}&reserveDay=${selectedDay}&reserveTime=${selectedTime}`;

                fetch(reservationUrl, {
                    method: 'POST',
                })
                .then(response => {
                    if (response.status ==201) {
                        alert('예약이 성공적으로 완료되었습니다.');
                    } else {
                        alert('이미 찬 예약 입니다. 다른 요일이나 시간을 선택해주세요.');
                    }
                })
                .catch(error => {
                    console.error('예약 오류:', error);
                });
            });
        });
    </script>
</body>
</html>
