<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link  rel = "stylesheet" href = "stylesheets/reserveInfo.css">
</head>
<body>
    <header>
        <nav>
            <ul>
                <li><a href = "/ExpertFilter">예약하기</a></li>
                <li><a href = "/reserveInfo">예약정보</a></li>
                <li><a href = "/mypage">회원정보</a></li>
            </ul>
        </nav>
    </header>
    <div class = "filter">
        <form id = "button-form">
            <button type="button" class="pastReserve" onclick="getPre()">이전예약</button>
            <button type="button" class="futureReserve" onclick="getFuture()">상담 예정 예약</button>
        </form>
    </div>

    <div class="reservation-info">
        <table>
            <thead>
                <tr>
                    <th>날짜</th>
                    <th>시간</th>
                    <th>고객이름</th>
                    <th>전문가이름</th>
                    <th>리뷰쓰기</th>
                </tr>
            </thead>
            <tbody id="reservationTableBody">
                <!-- 이곳에 JavaScript를 통해 데이터를 동적으로 추가. -->
            </tbody>
        </table>
    </div>
    <div id="review-form" style="display: none;">

        <form id="review-form-data">
            <input type="hidden" id="selected-reservation-id" value="" />
            <label for="review-message">리뷰 메시지:</label><br>
            <textarea id="review-message" name="review-message" rows="4" cols="50"></textarea><br>
            <input type="number" id="review-rating" name="review-rating" min="1" max="5"><br>
            <input type="submit" value="리뷰 제출">
        </form>
    </div>


    <script>
        const cookies = document.cookie.split(';').map(cookie => cookie.split('='));
        const userIdCookie = cookies.find(cookie => cookie[0].trim() === 'userId');
        const userId = userIdCookie ? userIdCookie[1] : null;
        let apiUrl = '';

        async function Reservation(){
            if(userId){
                apiUrl = `http://localhost:8080/reservations?userId=${userId}`;
                try{
                    const response = await fetch(apiUrl);
                    if(response.ok){
                        const dataArray = await response.json();
                        updateReservationTable(dataArray);
                    }
                    else{
                        console.error('서버 응답 오류:', response.status);
                    }
                }
                catch(error){
                    console.error('데이터를 불러오는 도중 에러가 발생했습니다:', error);
                }
            }
            else{
                console.log('userId를 찾을 수 없습니다.');
            }

        }

        
        function updateReservationTable(dataArray){
            const reservationTableBody = document.getElementById('reservationTableBody');
            reservationTableBody.innerHTML = '';
            dataArray.forEach(data => {
                const row = document.createElement('tr');
                
                // 각 열 추가
        const dateCell = document.createElement('td');
        dateCell.textContent = data.reservDate; // 예약 날짜 데이터 필드에 접근하는 방법에 따라 수정
        row.appendChild(dateCell);

        const timeCell = document.createElement('td');
        timeCell.textContent = data.reservTime; // 예약 시간 데이터 필드에 접근하는 방법에 따라 수정
        row.appendChild(timeCell);

        const customerNameCell = document.createElement('td');
        customerNameCell.textContent = data.userName; // 고객 이름 데이터 필드에 접근하는 방법에 따라 수정
        row.appendChild(customerNameCell);

        const expertNameCell = document.createElement('td');
        expertNameCell.textContent = data.expertsName; // 전문가 이름 데이터 필드에 접근하는 방법에 따라 수정
        row.appendChild(expertNameCell);

        const reviewCell = document.createElement('td');
        const reviewButton = document.createElement('button');
        reviewButton.textContent = '리뷰쓰기';
        reviewButton.addEventListener('click', () => openReviewForm(data.id)); // 리뷰 작성 폼 열기
        reviewCell.appendChild(reviewButton);
        row.appendChild(reviewCell);

        reservationTableBody.appendChild(row);
            });
        }
      
        Reservation();


        async function getPre() {
            if (userId) {
                apiUrl = `http://localhost:8080/reservations/?status=before&userId=${userId}`;
                try {
                    const response = await fetch(apiUrl);
                    if (response.ok) {
                        const dataArray = await response.json();
                        updateReservationTable(dataArray);
                    } else {
                        console.error('서버 응답 오류:', response.status);
                    }
                } catch (error) {
                    console.error('데이터를 불러오는 도중 에러가 발생했습니다:', error);
                }
            } else {
                console.log('userId를 찾을 수 없습니다.');
            }
        }




        async function getFuture() {
            if (userId) {
                apiUrl = `http://localhost:8080/reservations/?status=after&userId=${userId}`;
                try {
                    const response = await fetch(apiUrl);
                    if (response.ok) {
                        const dataArray = await response.json();
                        updateReservationTable(dataArray);
                    } else {
                        console.error('서버 응답 오류:', response.status);
                    }
                } catch (error) {
                    console.error('데이터를 불러오는 도중 에러가 발생했습니다:', error);
                }
            } else {
                console.log('userId를 찾을 수 없습니다.');
            }
        }










    </script>

</body>
</html>